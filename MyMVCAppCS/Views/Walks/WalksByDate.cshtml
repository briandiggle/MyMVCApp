@using MyMVCApp.DAL
@model MyMVCAppCS.Models.PaginatedListMVC<MyMVCApp.DAL.Walk>

@{ ViewBag.Title = "Walks Sorted by Date";}

    <h2>Browse Walks</h2>

    <table class="hiddentable">
        <tr>
            <td colspan="3">@Html.Raw(Model.PageNavigationLinks)</td>
            <td></td>
            <td colspan="4" align="right">Showing @Model.RecordsShowing Walks</td>
        </tr>
    </table>
    <table class="datatable">
        <tr>
            <th></th>
            <th>    @if (ViewData["OrderBy"].Equals("Date"))
                    {
                        <strong>
                        @if (ViewData["OrderAscDesc"].Equals("Asc"))
                        {
                            @Html.ActionLink("Date <Asc>", "WalksByDate", new { OrderBy = "DateDesc" })
                        } else
                        {
                            @Html.ActionLink("Date <Desc>", "WalksByDate", new { OrderBy = "DateAsc" })
                        }
                        </strong>
                    } else
                    {
                        @Html.ActionLink("Date", "WalksByDate", new { OrderBy = "DateDesc" })
                    }
            </th>
            <th>
                   @if (ViewData["OrderBy"].Equals("Title"))
                   {
                       <strong>
                       @if (ViewData["OrderAscDesc"].Equals("Asc"))
                       {
                           @Html.ActionLink("Title <Asc>", "WalksByDate", new { OrderBy = "TitleDesc" })
                       } else
                       {
                           @Html.ActionLink("Title <Desc>", "WalksByDate", new { OrderBy = "TitleAsc" })
                       }
                       </strong>
                   } else
                   {
                       @Html.ActionLink("Title", "WalksByDate", new { OrderBy = "TitleAsc" })
                   }
            </th>

            <th>
                   @if (ViewData["OrderBy"].Equals("Area"))
                   {
                       <strong>
                       @if (ViewData["OrderAscDesc"].Equals("Asc"))
                       {
                           @Html.ActionLink("Area <Asc>", "WalksByDate", new { OrderBy = "AreaDesc" })
                       } else
                       {
                           @Html.ActionLink("Area <Desc>", "WalksByDate", new { OrderBy = "AreaAsc" })
                       }
                       </strong>
                   } else
                   {
                       @Html.ActionLink("Area", "WalksByDate", new { OrderBy = "AreaAsc" })
                   }
            </th>
            <th>
                    @if (ViewData["OrderBy"].Equals("Length"))
                    {
                        <strong>
                        @if (ViewData["OrderAscDesc"].Equals("Asc"))
                        {
                            @Html.ActionLink("Length <Asc>", "WalksByDate", new { OrderBy = "LengthDesc" })
                        } else
                        {
                            @Html.ActionLink("Length <Desc>", "WalksByDate", new { OrderBy = "LengthAsc" })
                        }
                        </strong>
                    } else
                    {
                        @Html.ActionLink("Length", "WalksByDate", new { OrderBy = "LengthDesc" })
                    }
            </th>
           <th>
                    @if (ViewData["OrderBy"].Equals("Ascent"))
                    {
                        <strong>
                        @if (ViewData["OrderAscDesc"].Equals("Asc"))
                        {
                            @Html.ActionLink("Ascent <Asc>", "WalksByDate", new { OrderBy = "AscentDesc" })
                        } else
                        {
                            @Html.ActionLink("Ascent <Desc>", "WalksByDate", new { OrderBy = "AscentAsc" })
                        }
                        </strong>
                    } else
                    {
                        @Html.ActionLink("Ascent", "WalksByDate", new { OrderBy = "AscentAsc" })
                    }
            </th>
           <th>
                    @if (ViewData["OrderBy"].Equals("TotalTime"))
                    {
                        <strong>
                        if (ViewData["OrderAscDesc"].Equals("Asc"))
                        {
                            @Html.ActionLink("TotalTime <Asc>", "WalksByDate", new { OrderBy = "TotalTimeDesc" })
                        } else
                        {
                            @Html.ActionLink("TotalTime <Desc>", "WalksByDate", new { OrderBy = "TotalTimeAsc" })
                        }
                        </strong>
                    } else
                    {
                        @Html.ActionLink("TotalTime", "WalksByDate", new { OrderBy = "TotalTimeAsc" })
                    }
            </th>
          <th>
                    @if (ViewData["OrderBy"].Equals("OvlAvg"))
                    {
                        <strong>
                        @if (ViewData["OrderAscDesc"].Equals("Asc"))
                        {
                            @Html.ActionLink("OvlAvg <Asc>", "WalksByDate", new { OrderBy = "OvlAvgDesc" })
                        } else
                        {
                            @Html.ActionLink("OvlAvg <Desc>", "WalksByDate", new { OrderBy = "OvlAvgAsc" })
                        }
                        </strong>
                    } else
                    {
                        @Html.ActionLink("OvlAvg", "WalksByDate", new { OrderBy = "OvlAvgAsc" })
                    }
            </th>
        </tr>

    @foreach (Walk item in Model)
       {
        <tr>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.WalkID }) 
             </td>
            <td>
                @String.Format("{0:D}", item.WalkDate)
            </td>
            <td>
                @Html.ActionLink(item.WalkTitle, "Details", new { id = item.WalkID })
            </td>
            <td>               
                @Html.ActionLink(item.WalkAreaName, "HillsByArea", new { id = item.Area.Arearef.Trim() })
            </td>
            <td>
                @item.CartographicLength
            </td>
          <td>
                @item.MetresOfAscent
            </td>
         <td>
                @WalkingStick.ConvertTotalTimeToString(item.WalkTotalTime, true)
            </td>      
            <td>
                @item.WalkAverageSpeedKmh
            </td>                                 
        </tr>
     }  
       <tr>
            <td colspan="8"></td>
       </tr>
       <tr>
            <td colspan="8">@Html.Raw(Model.PageNavigationLinks)</td>
        </tr>
    </table>
